(in-package :sqnc)

(defps *keynames->keysyms* (table :test #'equal)
       *keysyms->keynames* (table)
       *keycodes*          (table))

(macs keyname->keysym (kn) `(getab ,kn *keynames->keysyms*)
      keysym->keyname (ks) `(getab ,ks *keysyms->keynames*))

(classy key () (sym nil))

(defms key  ((k key))    k
       key  ((k number)) (when (keysym->keyname k) (new 'key :sym k))
       key  ((k string)) (awhen (keyname->keysym k) (key it))
       name ((k key))    (keysym->keyname (sym k)))

(def defkey (def &o (kc *keycodes*))
  (dbind (name sym . codes) def
    (=! (keysym->keyname sym) name
        (keyname->keysym name) sym)
    (mapn [tabind _ name kc t] codes)))

(plural defkey defkeys 1)

; rxvt's scancodes:
(defkeys '("C-Space"      0       (0))
         '("C-a"          1       (1))
         '("C-b"          2       (2))
         '("C-c"          3       (3))
         '("C-d"          4       (4))
         '("C-e"          5       (5))
         '("C-f"          6       (6))
         '("C-g"          7       (7))
         '("C-h"          8       (8))
         '("Tab"          9       (9))
         '("Newline"      10      (10))
         '("C-k"          11      (11))
         '("C-l"          12      (12))
         '("Return"       13      (13))
         '("C-n"          14      (14))
         '("C-o"          15      (15))
         '("C-p"          16      (16))
         '("C-q"          17      (17))
         '("C-r"          18      (18))
         '("C-s"          19      (19))
         '("C-t"          20      (20))
         '("C-u"          21      (21))
         '("C-v"          22      (22))
         '("C-w"          23      (23))
         '("C-x"          24      (24))
         '("C-y"          25      (25))
         '("C-z"          26      (26))
         '("C-["          27      (27 -1))
         '("C-\\"         28      (28))
         '("C-]"          29      (29))
         '("C-6"          30      (30))
         '("C--"          31      (31))
         '("Space"        32      (32))
         '("!"            33      (33))
         '("\""           34      (34))
         '("#"            35      (35))
         '("$"            36      (36))
         '("%"            37      (37))
         '("&"            38      (38))
         '("'"            39      (39))
         '("("            40      (40))
         '(")"            41      (41))
         '("*"            42      (42))
         '("+"            43      (43))
         '(","            44      (44))
         '("-"            45      (45))
         '("."            46      (46))
         '("/"            47      (47))
         '("0"            48      (48))
         '("1"            49      (49))
         '("2"            50      (50))
         '("3"            51      (51))
         '("4"            52      (52))
         '("5"            53      (53))
         '("6"            54      (54))
         '("7"            55      (55))
         '("8"            56      (56))
         '("9"            57      (57))
         '(":"            58      (58))
         '(";"            59      (59))
         '("<"            60      (60))
         '("="            61      (61))
         '(">"            62      (62))
         '("?"            63      (63))
         '("@"            64      (64))
         '("A"            65      (65))
         '("B"            66      (66))
         '("C"            67      (67))
         '("D"            68      (68))
         '("E"            69      (69))
         '("F"            70      (70))
         '("G"            71      (71))
         '("H"            72      (72))
         '("I"            73      (73))
         '("J"            74      (74))
         '("K"            75      (75))
         '("L"            76      (76))
         '("M"            77      (77))
         '("N"            78      (78))
         '("O"            79      (79))
         '("P"            80      (80))
         '("Q"            81      (81))
         '("R"            82      (82))
         '("S"            83      (83))
         '("T"            84      (84))
         '("U"            85      (85))
         '("V"            86      (86))
         '("W"            87      (87))
         '("X"            88      (88))
         '("Y"            89      (89))
         '("Z"            90      (90))
         '("["            91      (91))
         '("\\"           92      (92))
         '("]"            93      (93))
         '("^"            94      (94))
         '("_"            95      (95))
         '("`"            96      (96))
         '("a"            97      (97))
         '("b"            98      (98))
         '("c"            99      (99))
         '("d"            100     (100))
         '("e"            101     (101))
         '("f"            102     (102))
         '("g"            103     (103))
         '("h"            104     (104))
         '("i"            105     (105))
         '("j"            106     (106))
         '("k"            107     (107))
         '("l"            108     (108))
         '("m"            109     (109))
         '("n"            110     (110))
         '("o"            111     (111))
         '("p"            112     (112))
         '("q"            113     (113))
         '("r"            114     (114))
         '("s"            115     (115))
         '("t"            116     (116))
         '("u"            117     (117))
         '("v"            118     (118))
         '("w"            119     (119))
         '("x"            120     (120))
         '("y"            121     (121))
         '("z"            122     (122))
         '("{"            123     (123))
         '("|"            124     (124))
         '("}"            125     (125))
         '("~"            126     (126))
         '("Rubout"       127     (127))
         '("C-M-Space"    128     (27 0))
         '("C-M-a"        129     (27 1))
         '("C-M-b"        130     (27 2))
         '("C-M-c"        131     (27 3))
         '("C-M-d"        132     (27 4))
         '("C-M-e"        133     (27 5))
         '("C-M-f"        134     (27 6))
         '("C-M-g"        135     (27 7))
         '("C-M-h"        136     (27 8))
         ; '("C-M-i"      137     (27 9)) ; Duplicate of M-Tab
         '("C-M-j"        138     (27 10))
         '("C-M-k"        139     (27 11))
         '("C-M-l"        140     (27 12))
         '("M-Return"     141     (27 13))
         '("C-M-n"        142     (27 14))
         '("C-M-o"        143     (27 15))
         '("C-M-p"        144     (27 16))
         '("C-M-q"        145     (27 17))
         '("C-M-r"        146     (27 18))
         '("C-M-s"        147     (27 19))
         '("C-M-t"        148     (27 20))
         '("C-M-u"        149     (27 21))
         '("C-M-v"        150     (27 22))
         '("C-M-w"        151     (27 23))
         '("C-M-x"        152     (27 24))
         '("C-M-y"        153     (27 25))
         '("C-M-z"        154     (27 26))
         '("C-M-["        155     (27 27 -1))
         '("C-M-\\"       156     (27 28))
         '("C-M-]"        157     (27 29))
         '("C-M--"        158     (27 31))
         ; '("C-M-Rubout"   159     (27 31))
         '("M-Space"      160     (27 32))
         '("M-!"          161     (27 33))
         '("M-\""         162     (27 34))
         '("M-#"          163     (27 35))
         '("M-$"          164     (27 36))
         '("M-%"          165     (27 37))
         '("M-&"          166     (27 38))
         '("M-'"          167     (27 39))
         '("M-("          168     (27 40))
         '("M-)"          169     (27 41))
         '("M-*"          170     (27 42))
         '("M-+"          171     (27 43))
         '("M-,"          172     (27 44))
         '("M--"          173     (27 45))
         '("M-."          174     (27 46))
         '("M-/"          175     (27 47))
         '("M-0"          176     (27 48))
         '("M-1"          177     (27 49))
         '("M-2"          178     (27 50))
         '("M-3"          179     (27 51))
         '("M-4"          180     (27 52))
         '("M-5"          181     (27 53))
         '("M-6"          182     (27 54))
         '("M-7"          183     (27 55))
         '("M-8"          184     (27 56))
         '("M-9"          185     (27 57))
         '("M-:"          186     (27 58))
         '("M-;"          187     (27 59))
         '("M-<"          188     (27 60))
         '("M-="          189     (27 61))
         '("M->"          190     (27 62))
         '("M-?"          191     (27 63))
         '("M-@"          192     (27 64))
         '("M-A"          193     (27 65))
         '("M-B"          194     (27 66))
         '("M-C"          195     (27 67))
         '("M-D"          196     (27 68))
         '("M-E"          197     (27 69))
         '("M-F"          198     (27 70))
         '("M-G"          199     (27 71))
         '("M-H"          200     (27 72))
         '("M-I"          201     (27 73))
         '("M-J"          202     (27 74))
         '("M-K"          203     (27 75))
         '("M-L"          204     (27 76))
         '("M-M"          205     (27 77))
         '("M-N"          206     (27 78))
         '("M-O"          207     (27 79 -1))
         '("M-P"          208     (27 80))
         '("M-Q"          209     (27 81))
         '("M-R"          210     (27 82))
         '("M-S"          211     (27 83))
         '("M-T"          212     (27 84))
         '("M-U"          213     (27 85))
         '("M-V"          214     (27 86))
         '("M-W"          215     (27 87))
         '("M-X"          216     (27 88))
         '("M-Y"          217     (27 89))
         '("M-Z"          218     (27 90))
         '("M-["          219     (27 91 -1))
         '("M-\\"         220     (27 92))
         '("M-]"          221     (27 93))
         '("M-^"          222     (27 94))
         '("M-_"          223     (27 95))
         '("M-`"          224     (27 96))
         '("M-a"          225     (27 97))
         '("M-b"          226     (27 98))
         '("M-c"          227     (27 99))
         '("M-d"          228     (27 100))
         '("M-e"          229     (27 101))
         '("M-f"          230     (27 102))
         '("M-g"          231     (27 103))
         '("M-h"          232     (27 104))
         '("M-i"          233     (27 105))
         '("M-j"          234     (27 106))
         '("M-k"          235     (27 107))
         '("M-l"          236     (27 108))
         '("M-m"          237     (27 109))
         '("M-n"          238     (27 110))
         '("M-o"          239     (27 111))
         '("M-p"          240     (27 112))
         '("M-q"          241     (27 113))
         '("M-r"          242     (27 114))
         '("M-s"          243     (27 115))
         '("M-t"          244     (27 116))
         '("M-u"          245     (27 117))
         '("M-v"          246     (27 118))
         '("M-w"          247     (27 119))
         '("M-x"          248     (27 120))
         '("M-y"          249     (27 121))
         '("M-z"          250     (27 122))
         '("M-{"          251     (27 123))
         '("M-|"          252     (27 124))
         '("M-}"          253     (27 125))
         '("M-~"          254     (27 126))
         '("M-Rubout"     255     (27 127))
         '("S-Tab"        256     (27 91 90))
         '("M-Tab"        258     (27 9))
         ; ("C-Tab"       257     NIL)
         ; ("S-C-Tab"     259     NIL)
         '("S-M-Tab"      260     (27 27 91 90))
         '("F1"           261     (27 91 49 49 126))
         '("F2"           262     (27 91 49 50 126))
         '("F3"           263     (27 91 49 51 126))
         '("F4"           264     (27 91 49 52 126))
         '("F5"           265     (27 91 49 53 126))
         '("F6"           266     (27 91 49 55 126))
         '("F7"           267     (27 91 49 56 126))
         '("F8"           268     (27 91 49 57 126))
         '("F9"           269     (27 91 50 48 126))
         '("F10"          270     (27 91 50 49 126))
         '("F11"          271     (27 91 50 51 126))
         '("F12"          272     (27 91 50 52 126))
         ; ("S-F1"        273     (NIL))
         ; ("S-F2"        274     (NIL))
         '("S-F3"         275     (27 91 50 53 126))
         '("S-F4"         276     (27 91 50 54 126))
         '("S-F5"         277     (27 91 50 56 126))
         '("S-F6"         278     (27 91 50 57 126))
         '("S-F7"         279     (27 91 51 49 126))
         '("S-F8"         280     (27 91 51 50 126))
         '("S-F9"         281     (27 91 51 51 126))
         '("S-F10"        282     (27 91 51 52 126))
         '("S-F11"        283     (27 91 50 51 36))
         '("S-F12"        284     (27 91 50 52 36))
         '("C-F1"         285     (27 91 49 49 94))
         '("C-F2"         286     (27 91 49 50 94))
         '("C-F3"         287     (27 91 49 51 94))
         '("C-F4"         288     (27 91 49 52 94))
         '("C-F5"         289     (27 91 49 53 94))
         '("C-F6"         290     (27 91 49 55 94))
         '("C-F7"         291     (27 91 49 56 94))
         '("C-F8"         292     (27 91 49 57 94))
         '("C-F9"         293     (27 91 50 48 94))
         '("C-F10"        294     (27 91 50 49 94))
         '("C-F11"        295     (27 91 50 51 94))
         '("C-F12"        296     (27 91 50 52 94))
         '("M-F1"         297     (27 27 91 49 49 126))
         '("M-F2"         298     (27 27 91 49 50 126))
         '("M-F3"         299     (27 27 91 49 51 126))
         '("M-F4"         300     (27 27 91 49 52 126))
         '("M-F5"         301     (27 27 91 49 53 126))
         '("M-F6"         302     (27 27 91 49 55 126))
         '("M-F7"         303     (27 27 91 49 56 126))
         '("M-F8"         304     (27 27 91 49 57 126))
         '("M-F9"         305     (27 27 91 50 48 126))
         '("M-F10"        306     (27 27 91 50 49 126))
         '("M-F11"        307     (27 27 91 50 51 126))
         '("M-F12"        308     (27 27 91 50 52 126))
         ; ("S-C-F1"      309     NIL)
         ; ("S-C-F2"      310     NIL)
         '("S-C-F3"       311     (27 91 50 53 94))
         '("S-C-F4"       312     (27 91 50 54 94))
         '("S-C-F5"       313     (27 91 50 56 94))
         '("S-C-F6"       314     (27 91 50 57 94))
         '("S-C-F7"       315     (27 91 51 49 94))
         '("S-C-F8"       316     (27 91 51 50 94))
         '("S-C-F9"       317     (27 91 51 51 94))
         '("S-C-F10"      318     (27 91 51 52 94))
         '("S-C-F11"      319     (27 91 50 51 64))
         '("S-C-F12"      320     (27 91 50 52 64))
         '("S-M-F3"       321     (27 27 91 50 53 126))
         '("S-M-F4"       322     (27 27 91 50 54 126))
         '("S-M-F5"       323     (27 27 91 50 56 126))
         '("S-M-F6"       324     (27 27 91 50 57 126))
         '("S-M-F7"       325     (27 27 91 51 49 126))
         '("S-M-F8"       326     (27 27 91 51 50 126))
         '("S-M-F9"       327     (27 27 91 51 51 126))
         '("S-M-F10"      328     (27 27 91 51 52 126))
         '("S-M-F11"      329     (27 27 91 50 51 36))
         '("S-M-F12"      330     (27 27 91 50 52 36))
         '("Up"           331     (27 91 65))
         '("Down"         332     (27 91 66))
         '("Left"         333     (27 91 68))
         '("Right"        334     (27 91 67))
         '("S-Up"         335     (27 91 97))
         '("S-Down"       336     (27 91 98))
         '("S-Left"       337     (27 91 100))
         '("S-Right"      338     (27 91 99))
         '("C-Up"         339     (27 79 97))
         '("C-Down"       340     (27 79 98))
         '("C-Left"       341     (27 79 100))
         '("C-Right"      342     (27 79 99))
         '("M-Up"         343     (27 27 91 65))
         '("M-Down"       344     (27 27 91 66))
         '("M-Left"       345     (27 27 91 68))
         '("M-Right"      346     (27 27 91 67))
         '("S-M-Up"       347     (27 27 91 97))
         '("S-M-Down"     348     (27 27 91 98))
         '("S-M-Left"     349     (27 27 91 100))
         '("S-M-Right"    350     (27 27 91 99))
         '("C-M-Up"       351     (27 27 79 97))
         '("C-M-Down"     352     (27 27 79 98))
         '("C-M-Left"     353     (27 27 79 100))
         '("C-M-Right"    354     (27 27 79 99))
         '("Insert"       355     (27 91 50 126))
         '("Delete"       356     (27 91 51 126))
         ; '("S-Insert"   357     NIL)
         '("S-Delete"     358     (27 91 51 36))
         '("C-Insert"     359     (27 91 50 94))
         '("C-Delete"     360     (27 91 51 94))
         '("M-Insert"     361     (27 27 91 50 126))
         '("M-Delete"     362     (27 27 91 51 126))
         '("S-C-Insert"   363     (27 91 50 64))
         '("S-C-Delete"   364     (27 91 51 64))
         '("S-M-Insert"   365     (27 27 91 50 36))
         '("S-M-Delete"   366     (27 27 91 51 36))
         '("C-M-Insert"   367     (27 27 91 50 94))
         ; ("C-M-Delete"  368     NIL)
         '("S-C-M-Insert" 369     (27 27 91 50 64))
         '("S-C-M-Delete" 370     (27 27 91 51 64)))

; keyname mappings

(defp *keynames->pitchclasses*
    (fill-table (table :test #'equal)
                "z"  0 "s"  1 "x"  2 "d"  3 "c"  4 "v"  5 "g"  6 "b"  7
                "h"  8 "n"  9 "j" 10 "m" 11 "," 12 "q" 12 "l" 13 "2" 13
                "." 14 "w" 14 ";" 15 "3" 15 "/" 16 "e" 16 "r" 17 "5" 18
                "t" 19 "6" 20 "y" 21 "7" 22 "u" 23 "i" 24 "9" 25 "o" 26
                "0" 27 "p" 28 "[" 29 "=" 30 "]" 31))

(defp *keynames->num-args*
    (fill-table (table :test #'equal)
                "M-0" 0 "M-1" 1 "M-2" 2 "M-3" 3 "M-4" 4
                "M-5" 5 "M-6" 6 "M-7" 7 "M-8" 8 "M-9" 9))

(defp *keynames->char-codes*
    (fill-table (table :test #'equal)
                "Tab"    9       "Return"   10      "Space" 32       "!"        33
                "\""    34       "#"        35      "$"     36       "%"        37
                "&"     38       "'"        39      "("     40       ")"        41
                "*"     42       "+"        43      ","     44       "-"        45
                "."     46       "/"        47      "0"     48       "1"        49
                "2"     50       "3"        51      "4"     52       "5"        53
                "6"     54       "7"        55      "8"     56       "9"        57
                ":"     58       ";"        59      "<"     60       "="        61
                ">"     62       "?"        63      "@"     64       "A"        65
                "B"     66       "C"        67      "D"     68       "E"        69
                "F"     70       "G"        71      "H"     72       "I"        73
                "J"     74       "K"        75      "L"     76       "M"        77
                "N"     78       "O"        79      "P"     80       "Q"        81
                "R"     82       "S"        83      "T"     84       "U"        85
                "V"     86       "W"        87      "X"     88       "Y"        89
                "Z"     90       "["        91      "\\"    92       "]"        93
                "^"     94       "_"        95      "`"     96       "a"        97
                "b"     98       "c"        99      "d"    100       "e"       101
                "f"    102       "g"       103      "h"    104       "i"       105
                "j"    106       "k"       107      "l"    108       "m"       109
                "n"    110       "o"       111      "p"    112       "q"       113
                "r"    114       "s"       115      "t"    116       "u"       117
                "v"    118       "w"       119      "x"    120       "y"       121
                "z"    122       "{"       123      "|"    124       "}"       125
                "~"    126))

; last key

(defps *current-keys* nil *keymaps* nil)

(def keystr (keyseq) (mkstr "~{~a~^ ~}" (mc #'name keyseq)))

(def keyseq (keystr) (mc [keyname->keysym _] (split/spc keystr)))

;; (def keyseq (keystr)
;;   (mc [or (keyname->keysym _) (error "Undefined key: ~a" _)]
;;       (split/spc keystr)))

(def current-keystr () (keystr *current-keys*))

(def last-key () (last1 *current-keys*))

(def last-keyname () (aand (last-key) (name it)))

(def last-key-ref (hash-table) (getab (last-keyname) hash-table))

(def last-pitchclass () (last-key-ref *keynames->pitchclasses*))

(def last-char () (last-key-ref *keynames->char-codes*))

(def last-str () (cc->str (last-char)))

; keybinding

(def bind (k cmd km)
  (tabind (if (stringp k) (keyseq k) k) cmd km))

(def fill-keymap (km . binds)
  (mapn [bind (car _) (cadr _) km] (pair binds)))

(def fill-keymap-w/fn (km fn hash)
  (mh (bind k fn km) hash) km)

; keyboard macros

(defps *kmacro-recording*    nil
       *kmacro-playing*      nil
       *c-kmac*              nil
       *last-kmacro*         nil
       *kmac-idx*            nil
       *meta-cmds*           nil)

(defs reset-kmacro () (nil! *c-kmac* *kmacro-recording*)
       save-kmacro () (=! *last-kmacro* *c-kmac*)
       next-kmacro () (nth (+! *kmac-idx*) *last-kmacro*))

(def kmacro-start-macro ()
  (if *kmacro-recording*
      (mb-msg "Keyboard macro already in progress")
      (pn (t! *kmacro-recording*)
          (mb-msg "Defining kbd macro..."))))

(def end-kmacro ()
  (if *kmacro-recording*
      (if *c-kmac*
          (pn (save-kmacro)
              (mb-msg "Keyboard macro defined"))
          (mb-msg "Ignore empty kbd macro"))
      (mb-msg "Not defining kbd macro"))
  (reset-kmacro))

(def kmacro-end-macro ()
  (a=! *c-kmac* (nrev (cddr it)))
  (end-kmacro))

(def kmacro-end-and-call-macro ()
  (when *kmacro-recording* (end-kmacro))
  (if *last-kmacro*
      (w/ (*kmacro-playing* t *kmac-idx* -1)
        (awhile (next-kmacro) (dispatch :key it)))
      (mb-msg "No kbd macro defined")))

(def show-last-kmacro ()
  (mb-msg (mkstr "Last kmacro: ~{~A ~}"
                 (mc #'name *last-kmacro*))))

; numeric arguments

(defps *num-arg* "" *max-arg* 10000)

(def reset-num-arg () (=! *num-arg* ""))

(def get-num-arg ()
  (w/ (n (stread *num-arg*))
    (reset-num-arg)
    (if (or (no n) (> n *max-arg*)) 1 n)))

(def num-arg ()
  (awhen (last-key-ref *keynames->num-args*)
    (w/ (ns (str-of it))
      (cat! *num-arg* ns)
      (mb-msg (mkstr "Current numeric argument: ~A" *num-arg*)))))

; command dispatch

(def getkey (&o (kc *keycodes*) rec (w (c-win)))
  (if rec (halfdelay 1) (raw))
  (aand (getab (_wgetch w) kc)
        (if (tablep it)
            (getkey it t w)
            (key it))))

(def next-key () (if *kmacro-playing* (next-kmacro) (getkey)))

(def cmd-exec (fn)
  (w/n res
    (for (i 0 (if (in fn *meta-cmds*) 1 (get-num-arg)))
      (=! res (=> fn)))))

(def dispatch (&k (key (next-key))) ; Tricky state here. Careful!
  (when key
    (unless *keymaps* (nil! *current-keys*) (=! *keymaps* (c-kms)))
    (rpush key *current-keys*)
    (when *kmacro-recording* (push key *c-kmac*))
    (w/ (bind (mapp [getab (sym key) _] *keymaps*))
      (typecase bind
        (hash-table (=! *keymaps* (filter [w/ (b (getab (sym key) _)) (and (tablep b) b)]
                                          *keymaps*))
                    (mb-msg (current-keystr)))
        (null       (nil! *keymaps*)
                    (mb-msg (mkstr "~A is undefined" (current-keystr))))
        (function   (nil! *keymaps*)
                    (cmd-exec bind))
        (symbol     (nil! *keymaps*)
                    (cmd-exec (symbol-function bind)))))))
